# https://github.com/yshui/picom/blob/next/picom.sample.conf
# Show options enabled by default:
#   grep -vE '^#|^$' /etc/xdg/picom.conf.example

#################################
#             Shadows           #
#################################
shadow = false

#################################
#           Fading              #
#################################
fading = false
# fading = true
# fade-in-step = 1
# fade-out-step = 0.99
# fade-delta = 10

#################################
#   Transparency / Opacity      #
#################################

#################################
#     Background-Blurring       #
#################################

#################################
#       General Settings        #
#################################
# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
backend = "glx"

# Enable/disable VSync.
vsync = true

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
mark-wmwin-focused = true

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
mark-ovredir-focused = true

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
detect-client-opacity = true

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,
# provided that the WM supports it.
use-ewmh-active-win = true

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
# detect-transient = false
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if
# detect-transient is enabled, too.
detect-client-leader = true

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content (but never
# practically happened) and may not work with blur-background.
# My tests show a 15% performance boost. Recommended.
glx-no-stencil = true

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes,
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
glx-no-rebind-pixmap = true

# Disabling the use of damage information causes the whole screen to be redrawn everytime,
# instead of the part of the screen that has actually changed.
# Potentially degrades the performance, but might fix some artifacts.
use-damage = true
