- hosts: all
  become: true

  vars:
    _user_name: "{{ user_name | default('denis') }}"

  tasks:
    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "/home/{{ _user_name }}/.zsh"
      become_user: "{{ _user_name }}"

    - name: Set timezone to Europe/Moscow
      timezone:
        name: Europe/Moscow

    - name: Disable boot splash screen
      replace:
        path: /etc/default/grub
        regexp: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"'
        replace: 'GRUB_CMDLINE_LINUX_DEFAULT=""'

    - name: Upgrade distribution
      apt:
        upgrade: dist
        update_cache: true
        cache_valid_time: 3600

    - name: Install apt packages
      apt:
        pkg:
          # Mandatory
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          # Package managers
          - flatpak
          - gnome-software-plugin-flatpak
          # Services
          - fcitx
          - openvpn
          - profile-sync-daemon
          - zsh
          # Misc
          - fonts-powerline
          # Programs
          - copyq
          - dconf-editor
          ### https://www.dropbox.com/install-linux
          - fd-find
          - flameshot
          - fzf
          - goldendict
          - gnome-shell-pomodoro
          - htop
          - neovim
          - okular
          - ripgrep
          - thefuck
          - tree
          - wireshark
          - xournal
          ### https://slack.com/intl/en-ru/downloads/linux
          - stacer
          - vifm
          - vlc
          - xclip
          # Python
          - python3-dev
          - python3-pip
          - virtualenvwrapper
          # Gnome system-monitor extension dependencies.
          # https://github.com/paradoxxxzero/gnome-shell-system-monitor-applet
          - gir1.2-gtop-2.0
          - gir1.2-nm-1.0
          - gir1.2-clutter-1.0
          # VLC pause click plugin dependencies.
          # https://github.com/nurupo/vlc-pause-click-plugin#debian
          - libvlccore-dev
          - libvlc-dev
        update_cache: true
        cache_valid_time: 3600

    - name: Add GPG keys
      apt_key:
        url: "{{ item }}"
      with_items:
        # https://code.visualstudio.com/docs/setup/linux
        - https://packages.microsoft.com/keys/microsoft.asc
        # https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
        - https://download.docker.com/linux/ubuntu/gpg
        # https://kubernetes.io/docs/tasks/tools/install-kubectl/
        - https://packages.cloud.google.com/apt/doc/apt-key.gpg
      notify:
        - update apt cache

    - name: Add apt repositories
      apt_repository:
        repo: "{{ item }}"
        update_cache: false
      with_items:
        # https://launchpad.net/~git-core/+archive/ubuntu/ppa
        - ppa:git-core/ppa
        # https://keepassxc.org/download/#linux
        # https://launchpad.net/~phoerious/+archive/ubuntu/keepassxc
        - ppa:phoerious/keepassxc
        # https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
        # codename = bionic = lsb_release -cs
        - "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_facts['lsb']['codename'] }} stable"
        # https://kubernetes.io/docs/tasks/tools/install-kubectl/
        - "deb https://apt.kubernetes.io/ kubernetes-xenial main"
      notify:
        - update apt cache

    # Run all handlers before installing packages from newly added repositories
    - meta: flush_handlers

    - name: Install remaining apt packages
      apt:
        pkg:
          - code
          - git
          - docker-ce
          - docker-ce-cli
          - containerd.io
          # - kubectl

    # - meta: end_play

    # Installing gnome-software-plugin-flatpak will install a deb version of Software.
    # https://flatpak.org/setup/Ubuntu/
    - name: Remove snap-store
      snap:
        name: snap-store
        state: absent

    - name: Install snap packages
      snap:
        name:
          # - authy  # uncomment when beta is finished
          - bitwarden
          - postman
          - superproductivity
          - telegram-desktop

    - name: Install snap packages with '--classic' option
      snap:
        name: "{{ item }}"
        classic: yes
      with_items:
          # - helm
          - hub
          # - kubectl
          - skype  # ? fcitx

    - name: Add flathub flatpak repository remote
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

    - name: Install flatpak packages
      flatpak:
        name: "{{ item }}"
        state: present
      with_items:
        - com.calibre_ebook.calibre  # no fcitx
        - com.github.tchx84.Flatseal
        - net.ankiweb.Anki
        - org.qbittorrent.qBittorrent

    - name: Install docker-compose
      get_url:
        # system (Linux) = uname -s; userspace_architecture (x86_64) = uname -m
        url: "https://github.com/docker/compose/releases/download/1.26.0/\
          docker-compose-{{ ansible_facts['system'] }}-{{ ansible_facts['userspace_architecture'] }}"
        dest: /usr/local/bin/docker-compose
        mode: "u=rwx,g=rx,o=rx"

    - name: Install oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh.git
        dest: "/home/{{ _user_name }}/.oh-my-zsh"
        version: master
      become_user: "{{ _user_name }}"
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"

    - name: Install powerlevel10k theme
      git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "/home/{{ _user_name }}/.oh-my-zsh/themes/powerlevel10k"
        version: master
        depth: 1
      become_user: "{{ _user_name }}"
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"

    - name: Install zsh-autosuggestions
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "/home/{{ _user_name }}/.zsh/zsh-autosuggestions"
        version: master
      become_user: "{{ _user_name }}"
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"

    - name: Install zsh-syntax-highlighting
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "/home/{{ _user_name }}/.zsh/zsh-syntax-highlighting"
        version: master
      become_user: "{{ _user_name }}"
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"

    - name: Install oh-my-tmux
      git:
        repo: https://github.com/gpakosz/.tmux.git
        dest: "/home/{{ _user_name }}/.tmux"
        version: master
      become_user: "{{ _user_name }}"
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"

    - name: Check if vlc pause click plugin is already installed
      stat: "path=/usr/lib/x86_64-linux-gnu/vlc/plugins/video_filter/libpause_click_plugin.so"
      register: vlc_pause_click_plugin
    
    - name: Download vlc pause click plugin 
      git:
        repo: https://github.com/nurupo/vlc-pause-click-plugin.git
        dest: "/home/{{ _user_name }}/Downloads/vlc-pause-click-plugin"
        version: 2.2.0
      become_user: "{{ _user_name }}"
      when: not vlc_pause_click_plugin.stat.exists
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"
      notify:
        - install vlc pause click plugin

    - name: Ensure 'docker' group exists
      group:
        name: docker
        state: present

    - name: Configure user
      user:
        name: "{{ _user_name }}"
        shell: /usr/bin/zsh
        groups: docker
        append: true

  handlers:
    - name: update apt cache
      apt:
        update_cache: true

    - name: install vlc pause click plugin
      command: "{{ item }}"
      args:
        chdir: "/home/{{ _user_name }}/Downloads/vlc-pause-click-plugin"
      with_items:
        - make
        - make install