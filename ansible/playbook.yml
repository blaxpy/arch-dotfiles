- hosts: all
  become: true

  vars:
    user: denis
    hostname: "{{ user }}-pc"

  tasks:
    # DEBUG
    # - debug: msg="HOME={{ hostname.split('-')[-1] }}."
    # - name: Create directories
    #   file:
    #     path: "{{ lookup('env','HOME') }}/test_dir"
    #     state: directory
    # - meta: end_play

    - name: Upgrade packages
      pacman:
        update_cache: yes
        upgrade: yes

    - name: Install essential packages
      pacman:
        name:
          # https://wiki.archlinux.org/index.php/Installation_guide
          - base
          - base-devel
          - linux
          - linux-firmware
          - intel-ucode
          - e2fsprogs
          - lvm2
          - grub
          - networkmanager
          - openssh
          - neovim
          - python-pynvim
          - git
          - sudo
        state: present

    - name: Disable quiet booting
      replace:
        # https://wiki.archlinux.org/index.php/GRUB
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=".*?"$'
        replace: 'GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3"'

    - name: Enable NetworkManager systemd service
      systemd:
        # https://wiki.archlinux.org/index.php/NetworkManager
        name: NetworkManager.service
        state: started
        enabled: yes

    - name: Set timezone to Europe/Moscow
      timezone:
        name: Europe/Moscow

    - name: Generate locales
      locale_gen:
        name: "{{ item }}"
        state: present
      with_items:
        - en_US.UTF-8
        - ru_RU.UTF-8

    - name: Set hostname
      hostname:
        name: "{{ hostname }}"

    - name: Set hosts
      template:
        src: hosts.j2
        dest: /etc/hosts

    - name: Allow sudo access to members of wheel group
      replace:
        path: /etc/sudoers
        regexp: '^# %wheel ALL=(ALL) ALL$'
        replace: '%wheel ALL=(ALL) ALL'
        validate: '/usr/bin/visudo --check --file %s'

    - name: Create groups
      group:
        name: "{{ item }}"
        state: present
      with_items:
        - docker

    - name: Create user
      user:
        name: "{{ user }}"
        shell: /usr/bin/zsh
        groups:
          - wheel
          - docker
        append: true

    - name: Install packages
      pacman:
        name:
          # File systems
          # https://wiki.archlinux.org/index.php/File_systems
          - dosfstools
          - ntfs-3g
          # Sound
          # https://wiki.archlinux.org/index.php/PulseAudio
          - pulseaudio
          - pulseaudio-alsa
          - pulseaudio-bluetooth
          - pavucontrol
          # Bluetooth
          # https://wiki.archlinux.org/index.php/Bluetooth
          - bluez
          - bluez-utils
          - blueman
          # Documentation
          - man-db
          - man-pages
          # Input method framework
          - ibus
          # Xorg display server
          # https://wiki.archlinux.org/index.php/Xorg
          - xorg-server
          - xorg-xinit
          - xorg-xsetroot
          - xorg-xset
          - xorg-setxkbmap
          - xcape
          - xclip
          - xrandr
          - xf86-video-amdgpu
          # Window manager
          - bspwm  # Window manager
          - sxhkd  # Hotkey daemon
          - picom  # Compositor for X11
          - dunst  # Notification daemon
          - hsetroot  # Wallpaper changer
          - feh  # Image viewer
          - yad  # Calendar
          - xdotool  # Automation tool for calendar
          # yay
          # - polybar
          # Fonts
          - ttf-jetbrains-mono
          # yay
          # - ttf-material-design-icons-git
          # - ttf-weather-icons
          # Shell
          - zsh
          - kitty
          - imagemagick
          # Terminal programs
          - htop
          - wget
          - thefuck
          - fzf  # Fuzzy finder
          - fd
          - ripgrep
          - httpie
          - jq  # JSON tool
          # Programs
          - firefox  # Web browser
          - profile-sync-daemon  # Browser profile in tmpfs
          - keepassxc  # Password manager
          - goldendict  # Dictionary
          - calibre  # E-book manager
          - qbittorrent  # Torrent client
          - zathura  # PDF viewer
          - mpv  # Video player
          - gimp  # Image editor
          - copyq  # Clipboard manager
          - flameshot  # Screenshot tool
          - peek  # GIF recorder
          - telegram-desktop  # Instant messenger
          # yay
          # - joplin
          # Development
          - python-pipenv
          - python-virtualenvwrapper
          - docker
          - docker-compose
          - kubectl
          - helm
          - hub
        state: present

    - name: Enable systemd services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - bluetooth.service
        - psd.service
        - docker.service

    - name: Create directories
      file:
        path: "{{ lookup('env','HOME') }}/.local/share/zsh/"
        state: directory
        recurse: yes
      become_user: "{{ user }}"

    - name: Install zsh plugins
      git:
        repo: "{{ item }}"
        dest: "{{ lookup('env','HOME') }}/.local/share/zsh/{{ item.split('/')[-1] }}"
        version: master
      with_items:
        - https://github.com/robbyrussell/oh-my-zsh
        - https://github.com/zsh-users/zsh-autosuggestions
        - https://github.com/zsh-users/zsh-syntax-highlighting
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"
      become_user: "{{ user }}"

    - name: Install zsh theme
      git:
        repo: https://github.com/romkatv/powerlevel10k
        dest: "{{ lookup('env','HOME') }}/.local/share/zsh/oh-my-zsh/themes/powerlevel10k"
        version: master
        depth: 1
      register: git_result
      changed_when: "git_result.after|default('after') != git_result.before|default('before')"
      become_user: "{{ user }}"
